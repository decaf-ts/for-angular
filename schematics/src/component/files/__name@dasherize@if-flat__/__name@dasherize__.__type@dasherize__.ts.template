import { Component, OnInit<% if(standalone){ %> <%} %> } from '@angular/core';
<% if(standalone){ %>import { ForAngularCommonModule } from '../../for-angular-common.module';<%} %>
import { NgxBaseComponent } from '../../engine/NgxBaseComponent';


@Component({
  selector: '<%= selector %>',
  templateUrl: './<%= dasherize(name) %>.<%= dasherize(type) %>.html',
  styleUrls: ['./<%= dasherize(name) %>.<%= dasherize(type) %>.<%= style %>'],
<% if(standalone) {%>  imports: [ForAngularCommonModule],
  standalone: true,
<%} %>
})
export class <%= classify(name) %><%= classify(type) %> extends NgxBaseComponent implements OnInit {

  /**
   * @constructor
   * @description Initializes a new instance of the <%= classify(name) %><%= classify(type) %>.
   * Calls the parent constructor with the component name for generate base locale string.
   */
  constructor() {
    super("<%= classify(name) %><%= classify(type) %>")
  }

  /**
   * Lifecycle hook that is called after data-bound properties of a directive are initialized.
   * This method is part of Angular's component lifecycle and is used for any additional initialization tasks.
   *
   * @returns {void} This method does not return a value.
   */
  ngOnInit(): void {

    // set component as initilizad, trigger change to get locale string
    this.initialize();
  }

}
